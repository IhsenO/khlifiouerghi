// Generated by dia2code
#ifndef ENGINE__SPLITARMYCOMMAND__H
#define ENGINE__SPLITARMYCOMMAND__H

#include <stack>
#include <json/json.h>

namespace state {
  class State;
};
namespace engine {
  class Action;
  class SplitArmyCommand;
  class Command;
}

#include "CommandTypeId.h"
#include "Command.h"

namespace engine {

  /// class SplitArmyCommand - 
  class SplitArmyCommand : public engine::Command {
    // Attributes
  protected:
    int xFrom;
    int yFrom;
    int xTo;
    int yTo;
    int soldiers;
    // Operations
  public:
    SplitArmyCommand (int xFrom, int yFrom, int xTo, int yTo, int soldiers);
    void execute (state::State& state, std::stack<Action*>& actionStack);
    CommandTypeId getCommandTypeId () const;
    void serialize (Json::Value& out) const;
    SplitArmyCommand* deserialize (const Json::Value& in);
    // Setters and Getters
    int getXFrom() const;
    void setXFrom(int xFrom);
    int getYFrom() const;
    void setYFrom(int yFrom);
    int getXTo() const;
    void setXTo(int xTo);
    int getYTo() const;
    void setYTo(int yTo);
    int getSoldiers() const;
    void setSoldiers(int soldiers);
  };

};

#endif
