// Generated by dia2code
#ifndef AI__DEEPAI__H
#define AI__DEEPAI__H

#include <stack>
#include <vector>

namespace ai {
  class DistanceMap;
};
namespace state {
  class State;
};
namespace engine {
  class Engine;
  class Action;
};
namespace ai {
  class AI;
  class Node;
}

#include "DistanceMap.h"
#include "AI.h"
#include "Node.h"

namespace ai {

  /// class DeepAI - 
  class DeepAI : public ai::AI {
    // Associations
    // Attributes
  protected:
    DistanceMap map;
    int depth;
    // Operations
  public:
    DeepAI (state::State& state, engine::Engine& engine, int depth);
    void run (engine::Engine& engine, std::stack<engine::Action*>& actionStack);
    int minmaxRecMin ();
    int minmaxRecMax ();
    void createTree (std::stack<engine::Action*>& actionStack);
    std::vector<engine::Command*> findCommands ();
    // Setters and Getters
    const DistanceMap& getMap() const;
    void setMap(const DistanceMap& map);
    int getDepth() const;
    void setDepth(int depth);
  };

};

#endif
