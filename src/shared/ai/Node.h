// Generated by dia2code
#ifndef AI__NODE__H
#define AI__NODE__H

#include <vector>

namespace ai {
  class Node;
};
namespace engine {
  class Command;
}

namespace ai {

  /// class Node - 
  class Node {
    // Attributes
  protected:
    int prof;
    std::vector<Node*> sons;
    Node* father;
    int value;
    int player;
    std::vector<engine::Command*> commands;
    // Operations
  public:
    Node ();
    Node (int prof, int value, int player, std::vector<engine::Command*> commands);
    void addSon (Node* node);
    Node* getSon (int id) const;
    int getSize () const;
    void addCommand (engine::Command* command);
    // Setters and Getters
    int getProf() const;
    void setProf(int prof);
    const std::vector<Node*>& getSons() const;
    void setSons(const std::vector<Node*>& sons);
    const Node*& getFather() const;
    void setFather(const Node*& father);
    int getValue() const;
    void setValue(int value);
    int getPlayer() const;
    void setPlayer(int player);
    const std::vector<engine::Command*>& getCommands() const;
    void setCommands(const std::vector<engine::Command*>& commands);
  };

};

#endif
