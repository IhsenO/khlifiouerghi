// Generated by dia2code
#ifndef AI__DISTANCEMAP__H
#define AI__DISTANCEMAP__H

#include <vector>
#include <queue>

namespace state {
  class State;
};
namespace ai {
  class Point;
}

#include "Direction.h"
#include "Point.h"

namespace ai {

  /// class DistanceMap - 
  class DistanceMap {
    // Attributes
  protected:
    int width;
    int height;
    std::vector<bool> map;
    std::vector<Direction> directions;
    // Operations
  public:
    DistanceMap ();
    void update (state::State& state);
    void afficher ();
    void init (int weight, int height);
    int dijkstra (int xFrom, int yFrom, int xTo, int yTo);
    void sortQueue (std::queue<Point>& queue);
    // Setters and Getters
    int getWidth() const;
    void setWidth(int width);
    int getHeight() const;
    void setHeight(int height);
    const std::vector<bool>& getMap() const;
    void setMap(const std::vector<bool>& map);
    const std::vector<Direction>& getDirections() const;
    void setDirections(const std::vector<Direction>& directions);
  };

};

#endif
